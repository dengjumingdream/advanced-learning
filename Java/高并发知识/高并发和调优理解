<!--
 * @Author: MrDeng
 * @Date: 2022-08-08 19:43:27
 * @LastEditTime: 2022-08-09 18:56:30
 * @LastEditors: dengjuming
 * @Description: 
 * @FilePath: /advanced-learning/Java/高并发知识/高并发和调优理解
-->
《大神：https://liushilive.github.io/github_exercise_performance_testing/md/performance/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%B1%BB%E5%9E%8B.html》
一、面试点
    1.对数据化指标没有概念
      - 不清楚选择什么样的指标来衡量高并发系统？分不清并发量和QPS，不知道自己系统的总用户量、活跃用户量，平峰和高峰时的QPS和TPS等关键数据。
    2.设计过高并发方案，但是细节掌握不够
      - 讲不出该方案要关注的技术点和可能带来的副作用。比如读性能有瓶颈会引入缓存，但是忽视了缓存命中率、热点key、数据一致性等问题。 
    3.理解片面，把高并发设计等同于性能优化
      - 大谈并发编程、多级缓存、异步化、水平扩容，却忽视高可用设计、服务治理和运维保障。
    4.掌握大方案，却忽视最基本的东西
      - 能讲清楚垂直分层、水平分区、缓存等大思路，却没意识去分析数据结构是否合理，算法是否高效，没想过从最根本的IO和计算两个维度去做细节优化。

二、数据化指标
    1.业务指标
      - 响应时间：网络时间、服务器处理时间、网络延迟。
      - 系统处理能力
        - HPS：每秒点击率
          - 最大HPS = 带宽 / 8 / 估算平均请求大小
          - 日访问量 = HPS * 3600 * 日访问小时数（一般为8小时）
        - QPS：系统每秒处理的查询次数，代表的是机器性能最大吞吐量
        - TPS：系统每秒处理交易数
          - TPS = 脚本运行期间所有事务总数 / 脚本运行时间
          - 系统在同一时间内能够处理业务的最大能力
      - 吞吐量
      - 并发用户数
        - 系统用户数
        - 在线用户数
        - 并发用户数
      - 最大并发用户数
    2.资源指标
      - CPU占用率
        - 上下文切换，进程抢占CPU资源
      - 内存ARM
        - 内存页交换率
          - 线程竞争内存
        - 可用字节数
          - 内存泄露
      - 磁盘I/O
        - Disk Rate：磁盘交换率

三、灵魂拷问
  - 很多同学应该属于这种情况，做过不少项目，唯独缺少高并发的实战经验。我建议从下面几个方向去做针对性准备。
  高并发有关的理论知识需要先有系统性的了解，然后再回到自己熟悉的业务上去思考：如果并发再提高 10 倍或者 100 倍，哪些环节会遇到问题，然后你会怎么去应对？有实际场景，并且你又能给出方案选型的合理依据，效果远比空谈理论要好很多。
  对于项目中常用的各种中间件，比如缓存、消息队列、ElasticSearch 等，其实都是非常典型的高并发系统，你可以对某个中间件进行深入研究，然后面试时主动引导面试官到这种基础组件上，谈谈你的认识。
  如果你对自己的高并发设计能力很有信心，也可以让面试官给你拟定一个业务场景，然后给出你的设计方案。
  - web项目需要性能测试么？
  - 转移不用web项目，那用什么项目？
  - GM自搭建网关项目