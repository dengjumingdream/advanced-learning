一、Nacos组成
  1.集服务发现、服务配置、服务元数据以及流量管理于一体的管理中心。
  2.作用：帮助我们发现服务、配置服务和管理服务。

二、Nacos架构
  1.Provider APP：服务提供者
  2.Consumer APP：服务消费者
  3.Name Server：通过VIP（virtual Ip）或者DNS的方式实现Nacos高可用集群的路由服务
  4.Nacos Server：Nacos服务提供者，里面包含OpenAPI-功能访问入口，
    Config service、Naming Service，用来实现Nacos集群节点的数据同步，
    使用Raft算法（Etcd、Redis哨兵选举）
  5.Nacos Console：控制台

三、Nacos引入概念
  1.客户端发起时间订阅后，在HostReactor中有一个UpdateTask线程，每10s发送一次Pull请求，获得服务端最新的地址列表
  2.对于服务端，它和服务提供者的实例之间维持了心跳检测，一旦服务提供者出现异常，则会发送一个Push消息给Nacos客户端，也就是服务端消费者
  3.服务消费者收到请求之后，使用HostReactor中提供的processServiceJSON解析消息，并更新本地服务地址列表

四、Nacos关键特性
  1.服务发现和服务健康检测
  2.动态配置服务
  3.动态DNS服务
  4.服务及其元数据管理

五、Nacos中引入的概念
  - 地域 （Region）
  - 物理的数据中心，资源创建成功后不能更换。
  - 可用区（Available Zone）
  - 同一地域内，电力和网络互相独立的物理区域。同一可用区内，实例的网络延迟较低。
  - 接入点（Endpoint）
  - 地域的某个服务的入口域名。

六、注册中心原理
  1.服务实例在启动时注册到服务注册表，并在关闭时注销
  2.服务消费者查询服务器注册表，获得可用实例
  3.服务注册中心调用服务注册的健康检查API来验证它是否存活

七、基本功能
  1.心跳机制
  2.注册原理
  3.服务提供者地址查询